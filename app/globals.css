@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: system-ui, sans-serif;
  }
}

@layer components {
  .card {
    @apply bg-white rounded-lg shadow-md p-6 border border-gray-200;
  }
  
  .btn-primary {
    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200;
  }
  
  .btn-secondary {
    @apply bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-md transition-colors duration-200;
  }
  
  .status-badge {
    @apply inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium;
  }
  
  .status-queued {
    @apply bg-gray-100 text-gray-800;
  }
  
  .status-in-progress {
    @apply bg-blue-100 text-blue-800;
  }
  
  .status-done {
    @apply bg-green-100 text-green-800;
  }
  
  .status-failed {
    @apply bg-red-100 text-red-800;
  }

  /* Task board section styling */
  .task-section {
    @apply rounded-xl border-2 p-5 shadow-sm hover:shadow-md transition-shadow duration-200;
  }
  
  .task-section-queued {
    @apply bg-gradient-to-br from-gray-50 to-gray-100 border-gray-300;
  }
  
  .task-section-in-progress {
    @apply bg-gradient-to-br from-blue-50 to-blue-100 border-blue-300;
  }
  
  .task-section-done {
    @apply bg-gradient-to-br from-green-50 to-green-100 border-green-300;
  }
  
  .task-section-failed {
    @apply bg-gradient-to-br from-red-50 to-red-100 border-red-300;
  }

  /* Compact rectangular task card styling */
  .task-card {
    @apply bg-white rounded-lg border border-gray-200 p-3 hover:shadow-lg hover:border-gray-300 transition-all duration-200 transform hover:-translate-y-0.5 min-h-[60px];
  }

  /* Design token helpers */
  .text-foreground { @apply text-[#0f172a] dark:text-gray-100; }
  .text-muted-foreground { @apply text-gray-500 dark:text-gray-400; }
  .bg-muted { @apply bg-gray-100 dark:bg-gray-800; }
  .border-border { @apply border-gray-200 dark:border-gray-700; }

  /* Buttons */
  .btn-ghost {
    @apply inline-flex items-center justify-center rounded-xl border border-transparent hover:border-border hover:bg-muted text-foreground transition-all duration-200;
  }

  /* Typography tuning */
  .section-title {
    @apply text-2xl md:text-3xl font-semibold text-foreground tracking-tight;
  }
  .section-subtitle {
    @apply text-sm text-muted-foreground;
  }

  .slide-in-left {
    animation: slideInLeft 0.6s ease-out forwards;
  }

  .slide-in-right {
    animation: slideInRight 0.6s ease-out forwards;
  }

  .scale-in {
    animation: scaleIn 0.5s ease-out forwards;
  }

  .stagger-1 { animation-delay: 0.1s; }
  .stagger-2 { animation-delay: 0.2s; }
  .stagger-3 { animation-delay: 0.3s; }
  .stagger-4 { animation-delay: 0.4s; }

  /* Premium card styling */
  .premium-card {
    @apply bg-white rounded-xl border border-gray-200 p-6 shadow-sm hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1;
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  }

  .premium-card-dark {
    @apply bg-gradient-to-br from-gray-900 to-gray-800 rounded-xl border border-gray-700 p-6 shadow-sm hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1;
  }

  /* Remove light gradient in dark mode for premium cards */
  .dark .premium-card {
    @apply bg-gray-900 border-gray-800;
    background: none;
  }

  /* Animated progress bars */
  .progress-bar {
    @apply h-3 bg-gray-200 rounded-full overflow-hidden relative;
  }

  .progress-fill {
    @apply h-full rounded-full transition-all duration-1000 ease-out relative overflow-hidden;
  }

  .progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 2s infinite;
  }

  /* Glass morphism effect */
  .glass-card {
    @apply backdrop-blur-sm bg-white/80 border border-white/20 rounded-xl shadow-lg;
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { 
    opacity: 0; 
    transform: translateY(30px); 
  }
  to { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

@keyframes slideInLeft {
  from { 
    opacity: 0; 
    transform: translateX(-30px); 
  }
  to { 
    opacity: 1; 
    transform: translateX(0); 
  }
}

@keyframes slideInRight {
  from { 
    opacity: 0; 
    transform: translateX(30px); 
  }
  to { 
    opacity: 1; 
    transform: translateX(0); 
  }
}

@keyframes scaleIn {
  from { 
    opacity: 0; 
    transform: scale(0.9); 
  }
  to { 
    opacity: 1; 
    transform: scale(1); 
  }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}
